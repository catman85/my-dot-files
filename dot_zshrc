
# uncomment to debug speed issues
#zmodload zsh/zprof

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# no need to use zcompile since it is handled by p10k instant propmt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Skip insecure directories for compinit
ZSH_DISABLE_COMPFIX=true

# Autosuggestions configuration
ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd)
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# oh-my-zsh disable auto updates
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

#zsh-defer
source ~/.oh-my-zsh/custom/plugins/zsh-defer/zsh-defer.plugin.zsh

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
 	zsh-shift-select
 	zsh-autocomplete
)

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# (zsh-defer asyncronously sources)
# these need to be sourced be fore oh-my-zsh.sh Otherwise, Oh My Zsh's plugin manager never sees these plugins...
# using zsh-defer or sourcing breaks the bindkeys bellow
# zsh-defer source ~/.oh-my-zsh/custom/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh
# Load autosuggestions before syntax-highlighting
zsh-defer source ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
zsh-defer source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# zsh-defer source ~/.config/broot/launcher/bash/br 

# zsh-completions
# To avoid issues with redundant .zcompdump cache generation (see #603), do not load zsh-completions as a standard plugin.
# This prevents compinit from being called twice and significantly improves shell startup time.
fpath+=${ZSH_CUSTOM:-${ZSH}/custom}/plugins/zsh-completions/src
source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='nano'

# adding the gem user directory to path so that you can execute gem
# scripts globally
export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"
export PATH="$PATH:$GEM_HOME/bin"

### MY CONFIGS ####
# ctrl + backspace
bindkey '^H' backward-kill-word
# ctrl + del
bindkey '5~' kill-word
# ctrl + z
bindkey '^Z' undo
# ctrl shift c copy's selected text
bindkey -M shift-select '^[[99;6u' copy-region-as-kill
# ctrl shift v pastes selected text
bindkey -M shift-select '^[[118;6u' yank

# zsh-autocomplete behavior
# tab enters menu, and continues to cycle selections, same for shift-tab
bindkey '^I' menu-select
bindkey -M menuselect '^I' menu-complete
bindkey -M menuselect "$terminfo[kcbt]" reverse-menu-complete
# Key bindings configuration
bindkey '^[[B' menu-select           # Down arrow triggers menu selection
bindkey '^[[A' .up-history    # Up arrow triggers history navigation
# Menu navigation bindings
bindkey -M menuselect '^[[A' up-line-or-history    # Up in menu
bindkey -M menuselect '^[[B' down-line-or-history  # Down in menu

# zsh-autosuggestions behavior
# tab to accept suggestion (right arrow is default)
# bindkey '^I' autosuggest-accept

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
alias zshconfig="$EDITOR ~/.zshrc"

# this alias searches for words in files recursively
# usage: search word, search word filename.txt
# alias search="ack --ignore-case --with-filename -B 1 -A 5"
alias search="rg -B 1 -A 5 --pretty"

# list the current folder and sort by size
alias sizeanalyze="du -h --max-depth=1 | sort -hr"

# select a process to kill, powered by fzf
alias pk="ps aux --sort=-%cpu | sed 1d | fzf -m | awk '{print $2}' | xargs kill"

# lsd(exa replacement) aliases
# list files
alias ll="lsd --long --header --human-readable --icon always --icon-theme unicode --git --timesort --group-dirs first"

# list all files in tree view
alias lt="ll --tree --depth 3"

# list -al with colors
alias la="ll --all"

# git log replacement
alias gll='git log --graph --pretty=oneline --abbrev-commit'

# search through all available packages, with package info shown in a preview window, and then install selected packages (you can select packages by hitting the tab button):
alias pacmani="pacman -Slq | fzf --multi --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S"

# thefuck alias overwrite
zsh-defer eval $(thefuck --alias)

# temprature alias
alias temp="sensors | grep CPU | awk '{print $2}'"

# fzf config
# allows fzf to search for hidden files
# fzf with find backend
# export FZF_DEFAULT_COMMAND='find ~ \( -type d -name ".cache" -o -type d -name ".local" -o -type d -name ".arduino15" -o -type d -name "node_modules" \) -prune -o -type f -print'
# makes fzf not fullscreen and gives it a border
# fzf with ripgrep backend
# be aware that the sort option disables all parallelism
export FZF_DEFAULT_COMMAND="rg --files --sortr modified --smart-case --hidden --max-depth 6 --fixed-strings --glob '!.npm/*' --glob '!.mozilla/*' --glob '!.vscode-oss/*' --glob '!**/.git/**' --glob '!**/node_modules/**' --glob '!.cache/*'"
export FZF_DEFAULT_OPTS="--height 60% --layout=reverse --border --filepath-word --cycle --preview 'bat --color=always {}'"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
# history config
HISTFILE="$HOME/.zsh_history"
# Display timestamps for each command
HIST_STAMPS="%T %d.%m.%y"
# History settings
HISTSIZE=10000
SAVEHIST=10000

# Ignore these commands in history
HISTORY_IGNORE="(ls|pwd|cd)*"
# Write the history file in the ':start:elapsed;command' format.
setopt EXTENDED_HISTORY
# Do not record an event starting with a space.
setopt HIST_IGNORE_SPACE
# Don't store history commands
setopt HIST_NO_STORE

# ctrl + r replacement tool
zsh-defer eval "$(mcfly init zsh)"

# Lazy-load nvm (add to ~/.zshrc)
lazynvm() {
  unset -f nvm node npm npx
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
}
nvm() { lazynvm; nvm "$@"; }
node() { lazynvm; node "$@"; }
npm() { lazynvm; npm "$@"; }
npx() { lazynvm; npx "$@"; }

#zprof
